DROP TABLE votes IF EXISTS;
DROP TABLE users IF EXISTS;
DROP TABLE meals IF EXISTS;
DROP TABLE lunches IF EXISTS;
DROP SEQUENCE global_seq IF EXISTS;

CREATE SEQUENCE GLOBAL_SEQ
  AS INTEGER
    START WITH 100000;

CREATE TABLE users
(
  id               INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  registered       TIMESTAMP DEFAULT now(),
  type             VARCHAR(255) NOT NULL,
  name             VARCHAR(255) NOT NULL,
  email            VARCHAR(255) NOT NULL,
  password         VARCHAR(255) NOT NULL
);

CREATE UNIQUE INDEX users_unique_email_idx ON users (email);

CREATE TABLE lunches
(
  id             INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  created        TIMESTAMP DEFAULT now(),
  restaurantName VARCHAR(255) NOT NULL
);

CREATE UNIQUE INDEX lunches_unique_created_restaurant_idx ON lunches (created, restaurantName);

CREATE TABLE meals
(
  id       INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  created  TIMESTAMP DEFAULT now(),
  dishName VARCHAR(255) NOT NULL,
  price    INTEGER      NOT NULL,
  lunchId  INTEGER      NOT NULL,
  FOREIGN KEY (lunchId) REFERENCES lunches (id) ON DELETE CASCADE
);

CREATE INDEX meals_lunch_idx ON meals (lunchId);

CREATE TABLE votes
(
  id             INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  votingDate DATE DEFAULT now(),
  userId         INTEGER NOT NULL,
  lunchId        INTEGER NOT NULL,
  FOREIGN KEY (userId) REFERENCES users (id),
  FOREIGN KEY (lunchId) REFERENCES lunches (id)
);

CREATE UNIQUE INDEX votes_unique_votingDate_user_idx ON votes (votingDate, userId);